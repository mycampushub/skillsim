@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 0 0% 100%;

  --foreground: 222 47% 11%;

  --border: 220 13% 91%;

  --card: 0 0% 98%;

  --card-foreground: 222 47% 11%;

  --card-border: 220 13% 94%;

  --sidebar: 220 9% 96%;

  --sidebar-foreground: 222 47% 11%;

  --sidebar-border: 220 9% 92%;

  --sidebar-primary: 222 47% 11%;

  --sidebar-primary-foreground: 0 0% 98%;

  --sidebar-accent: 220 9% 88%;

  --sidebar-accent-foreground: 222 47% 11%;

  --sidebar-ring: 188 94% 43%;

  --popover: 220 9% 94%;

  --popover-foreground: 222 47% 11%;

  --popover-border: 220 9% 90%;

  --primary: 222 47% 11%;

  --primary-foreground: 0 0% 98%;

  --secondary: 220 9% 90%;

  --secondary-foreground: 222 47% 11%;

  --muted: 220 9% 92%;

  --muted-foreground: 220 14% 45%;

  --accent: 188 94% 96%;

  --accent-foreground: 188 94% 20%;

  --destructive: 0 84% 35%;

  --destructive-foreground: 0 0% 98%;

  --input: 220 13% 85%;
  --ring: 188 94% 43%;
  --chart-1: 222 47% 11%;
  --chart-2: 25 95% 53%;
  --chart-3: 188 94% 43%;
  --chart-4: 217 91% 60%;
  --chart-5: 280 65% 47%;

  --font-sans: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: Menlo, monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 2px 0px 0px hsl(220 13% 91% / 0.10);
  --shadow-xs: 0px 2px 0px 0px hsl(220 13% 91% / 0.15);
  --shadow-sm: 0px 2px 0px 0px hsl(220 13% 91% / 0.12), 0px 1px 2px -1px hsl(220 13% 85% / 0.18);
  --shadow: 0px 2px 0px 0px hsl(220 13% 91% / 0.15), 0px 1px 2px -1px hsl(220 13% 85% / 0.20);
  --shadow-md: 0px 2px 0px 0px hsl(220 13% 91% / 0.18), 0px 2px 4px -1px hsl(220 13% 85% / 0.25);
  --shadow-lg: 0px 2px 0px 0px hsl(220 13% 91% / 0.20), 0px 4px 6px -1px hsl(220 13% 85% / 0.30);
  --shadow-xl: 0px 2px 0px 0px hsl(220 13% 91% / 0.22), 0px 8px 10px -1px hsl(220 13% 85% / 0.35);
  --shadow-2xl: 0px 2px 0px 0px hsl(220 13% 91% / 0.25);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 0 0% 8%;

  --foreground: 0 0% 95%;

  --border: 220 20% 18%;

  --card: 222 20% 12%;

  --card-foreground: 0 0% 95%;

  --card-border: 220 20% 15%;

  --sidebar: 222 20% 10%;

  --sidebar-foreground: 0 0% 95%;

  --sidebar-border: 220 20% 14%;

  --sidebar-primary: 222 47% 11%;

  --sidebar-primary-foreground: 0 0% 98%;

  --sidebar-accent: 220 20% 16%;

  --sidebar-accent-foreground: 0 0% 95%;

  --sidebar-ring: 188 94% 53%;

  --popover: 220 20% 14%;

  --popover-foreground: 0 0% 95%;

  --popover-border: 220 20% 17%;

  --primary: 222 47% 11%;

  --primary-foreground: 0 0% 98%;

  --secondary: 220 20% 18%;

  --secondary-foreground: 0 0% 95%;

  --muted: 220 20% 16%;

  --muted-foreground: 0 0% 70%;

  --accent: 188 94% 15%;

  --accent-foreground: 188 94% 88%;

  --destructive: 0 84% 35%;

  --destructive-foreground: 0 0% 98%;

  --input: 220 20% 25%;
  --ring: 188 94% 53%;
  --chart-1: 188 94% 73%;
  --chart-2: 25 95% 63%;
  --chart-3: 217 91% 70%;
  --chart-4: 280 65% 67%;
  --chart-5: 142 76% 56%;

  --shadow-2xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.25);
  --shadow-xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.30);
  --shadow-sm: 0px 2px 0px 0px hsl(0 0% 0% / 0.35), 0px 1px 2px -1px hsl(0 0% 0% / 0.40);
  --shadow: 0px 2px 0px 0px hsl(0 0% 0% / 0.40), 0px 1px 2px -1px hsl(0 0% 0% / 0.45);
  --shadow-md: 0px 2px 0px 0px hsl(0 0% 0% / 0.45), 0px 2px 4px -1px hsl(0 0% 0% / 0.50);
  --shadow-lg: 0px 2px 0px 0px hsl(0 0% 0% / 0.50), 0px 4px 6px -1px hsl(0 0% 0% / 0.55);
  --shadow-xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.55), 0px 8px 10px -1px hsl(0 0% 0% / 0.60);
  --shadow-2xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.60);

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
    /* Mobile optimizations */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
    overflow-x: hidden;
    min-width: 0;
  }

  #root {
    overflow-x: hidden;
    min-width: 0;
    width: 100%;
  }

  /* Mobile viewport optimizations */
  html {
    scroll-behavior: smooth;
    /* Prevent horizontal overflow on mobile */
    overflow-x: hidden;
  }

  body {
    overflow-x: hidden;
    min-width: 0;
  }

  /* Prevent horizontal overflow on all elements */
  * {
    min-width: 0;
  }

  /* Specific overflow prevention for common problem elements */
  img, video, iframe {
    max-width: 100%;
    height: auto;
  }

  /* Prevent text overflow */
  h1, h2, h3, h4, h5, h6, p, span, div {
    word-wrap: break-word;
    overflow-wrap: break-word;
    hyphens: auto;
  }

  /* Touch-friendly tap targets */
  @media (max-width: 768px) {
    button, a, input, textarea, select {
      min-height: 44px;
      touch-action: manipulation;
    }
  }

  /* Safe area insets for mobile devices */
  @supports (padding: max(0px)) {
    .safe-area-padding {
      padding-left: max(1rem, env(safe-area-inset-left));
      padding-right: max(1rem, env(safe-area-inset-right));
    }
    
    .safe-area-padding-top {
      padding-top: max(1rem, env(safe-area-inset-top));
    }
    
    .safe-area-padding-bottom {
      padding-bottom: max(1rem, env(safe-area-inset-bottom));
    }
  }

  /* Reduce motion for users who prefer it */
  @media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .bg-gradient-to-br {
      background-image: none !important;
    }
    
    .text-transparent {
      color: currentColor !important;
      background-image: none !important;
      -webkit-text-fill-color: currentColor !important;
    }
  }

  /* Enhanced smooth transitions */
  * {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0.0, 0.2, 1);
    transition-duration: 150ms;
  }

  /* Enhanced button transitions */
  button, a, input, textarea, select {
    transition: all 0.2s cubic-bezier(0.4, 0.0, 0.2, 1);
  }

  /* Smooth hover effects */
  button:hover, a:hover {
    transform: translateY(-1px);
    transition: all 0.2s cubic-bezier(0.4, 0.0, 0.2, 1);
  }

  button:active, a:active {
    transform: translateY(0px);
    transition: all 0.1s cubic-bezier(0.4, 0.0, 0.2, 1);
  }

  /* Smooth focus states */
  button:focus-visible, a:focus-visible, input:focus-visible, textarea:focus-visible, select:focus-visible {
    outline: 2px solid hsl(var(--ring));
    outline-offset: 2px;
    transition: all 0.2s cubic-bezier(0.4, 0.0, 0.2, 1);
  }

  /* Smooth card hover effects */
  .card, .hover-card {
    transition: all 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);
  }

  .card:hover, .hover-card:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
    transition: all 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);
  }

  /* Smooth modal transitions */
  .modal-backdrop {
    transition: opacity 0.2s cubic-bezier(0.4, 0.0, 0.2, 1);
  }

  .modal-content {
    transition: all 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);
    transform: scale(0.95);
    opacity: 0;
  }

  .modal-content.show {
    transform: scale(1);
    opacity: 1;
  }

  /* Smooth loading states */
  .loading-spinner {
    transition: opacity 0.2s cubic-bezier(0.4, 0.0, 0.2, 1);
  }

  /* Smooth page transitions */
  .page-transition {
    transition: opacity 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);
  }

  /* Enhanced mobile touch feedback */
  @media (hover: none) and (pointer: coarse) {
    button:active, a:active {
      transform: scale(0.98);
      transition: all 0.1s cubic-bezier(0.4, 0.0, 0.2, 1);
    }
  }

  /* Smooth scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }

  ::-webkit-scrollbar-track {
    background: hsl(var(--muted));
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb {
    background: hsl(var(--muted-foreground));
    border-radius: 4px;
    transition: background 0.2s cubic-bezier(0.4, 0.0, 0.2, 1);
  }

  ::-webkit-scrollbar-thumb:hover {
    background: hsl(var(--foreground));
    transition: background 0.2s cubic-bezier(0.4, 0.0, 0.2, 1);
  }

  /* Mobile performance optimizations */
  @media (max-width: 768px) {
    /* Reduce animations on mobile for better performance */
    .motion-reduce-mobile {
      animation: none !important;
      transition: none !important;
    }
    
    /* Optimize images for mobile */
    img {
      content-visibility: auto;
      contain-intrinsic-size: 400px 300px;
    }
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* Mobile utility classes */
  .mobile-scroll-snap-x {
    scroll-snap-type: x mandatory;
    -webkit-overflow-scrolling: touch;
  }
  
  .mobile-scroll-snap-child {
    scroll-snap-align: start;
    flex-shrink: 0;
  }

  /* Touch-friendly hover states */
  @media (hover: none) and (pointer: coarse) {
    .touch-hover:hover {
      background-color: transparent !important;
      transform: none !important;
    }
    
    .touch-hover:active {
      background-color: hsl(var(--accent)) !important;
      transform: scale(0.98) !important;
    }
  }

  /* Mobile-specific text sizing */
  .mobile-text-sm {
    @apply text-sm sm:text-base;
  }
  
  .mobile-text-base {
    @apply text-base sm:text-lg;
  }
  
  .mobile-text-lg {
    @apply text-lg sm:text-xl;
  }
  
  .mobile-text-xl {
    @apply text-xl sm:text-2xl;
  }
  
  .mobile-text-2xl {
    @apply text-2xl sm:text-3xl;
  }

  /* Mobile spacing utilities */
  .mobile-p-4 {
    @apply p-4 sm:p-6;
  }
  
  .mobile-p-6 {
    @apply p-6 sm:p-8;
  }
  
  .mobile-gap-4 {
    @apply gap-4 sm:gap-6;
  }
  
  .mobile-gap-6 {
    @apply gap-6 sm:gap-8;
  }

  /* Mobile grid utilities */
  .mobile-grid-1 {
    @apply grid-cols-1 sm:grid-cols-2 lg:grid-cols-3;
  }
  
  .mobile-grid-2 {
    @apply grid-cols-1 sm:grid-cols-2;
  }

  /* Responsive aspect ratios for mobile */
  .mobile-aspect-video {
    aspect-ratio: 16/9;
    @apply sm:aspect-video;
  }
  
  .mobile-aspect-square {
    aspect-ratio: 1/1;
    @apply sm:aspect-square;
  }

  /* Mobile card utilities */
  .mobile-card {
    @apply rounded-lg sm:rounded-xl lg:rounded-2xl;
  }
  
  .mobile-card-shadow {
    @apply shadow-md sm:shadow-lg lg:shadow-xl;
  }

  /* Mobile button utilities */
  .mobile-button-lg {
    @apply px-6 py-3 sm:px-8 sm:py-4 text-base sm:text-lg;
  }
  
  .mobile-button-sm {
    @apply px-4 py-2 sm:px-6 sm:py-3 text-sm sm:text-base;
  }

  /* Hide elements on mobile but show on desktop */
  .mobile-hidden {
    @apply hidden sm:block;
  }
  
  /* Show elements on mobile but hide on desktop */
  .mobile-only {
    @apply block sm:hidden;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
}